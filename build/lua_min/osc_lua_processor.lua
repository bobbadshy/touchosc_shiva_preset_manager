--[[START osc_lua_processor.lua]]globalPresetStoreName='shivaPresetStore'local a='000000DB'local b='FFFFFFD0'local e='2BA3D5C7'local f='FFAC0098'local g='2B84D5D7'local h='FFFFFFD0'local j='53ED26A6'local k='86F17DD2'local l=true;local n=false;local o=false;local p='preset 'local q=7;local r=7;local t='preset_name'local u='preset_id'local x='shivaReserved'local y=0;local z=1;local A='activePresetName'local B='newSave'local C=self.parent;local D=self.parent.children;local E={groupDirectLoad=D.groupDirectLoad.children,groupDirectLoadButtonsMain=D.groupDirectLoadButtons,groupDirectLoadButtons=D.groupDirectLoadButtons.children,grpManagerMain=D.grpManager,grpManager=D.grpManager.children,groupRunSettingsMain=D.groupRunSettings,groupRunSettings=D.groupRunSettings.children,groupKeyboardMain=D.groupKeyboard,groupKeyboard=D.groupKeyboard.children,grpBlock=D.grpBlock,borderGroupBottom=D.borderGroupBottom,allPages={},presetStore=nil,workStore=D.workStore.children,skinSettings=D.skinSettings.children,blinkFader=D.blinkFader,blinkText=D.blinkText,stBtnEnableDebug=D.groupRunSettings.children.stBtnEnableDebug,stBtnGrpFadeOnDirectLoad=D.groupRunSettings.children.stBtnGrpFadeOnDirectLoad.children.labelDisplay,stLblShowControlCount=D.groupRunSettings.children.stLblShowControlCount,stLblPresetRoot=D.groupRunSettings.children.stLblPresetRoot,dspInfo=D.grpManager.children.dspInfo,lcdMessage=D.grpManager.children.lcdMessage,btnFnLoad=D.grpManager.children.btnFnLoad,btnFnEnter=D.grpManager.children.btnFnEnter,btnFnSave=D.grpManager.children.btnFnSave,fdrCrossfade=D.grpManager.children.fdrCrossfade,lblFadeMode=D.grpManager.children.lblFadeMode,dspSelected=D.grpManager.children.dspSelected,lblRestore=D.grpManager.children.lblRestore,lblClearWork=D.grpManager.children.lblClearWork,lblDirectHeading=D.groupDirectLoad.children.lblDirectHeading,dspDirectInfo=D.groupDirectLoad.children.dspDirectInfo,menuContext=D.menuContext}local F={}local G={rootName=nil,presetRootCtrl='',allControls=nil,currValues={},presetValues={},fadeValues={},oldValues={},clipBoard={},modifiedText='',presetModified=false,maxPreset=0,selectedIsEmpty=false,collapsed=false,ignoreToggle=false,lastPage=nil,bankSize=130,kbdTarget='',lastWork=0,fadeStartTime=0,autoFade=true,fading=false,fadeStartValue=0.0,fadeStep=-1,fadeMax=100,blinkControls={},blinking=0,blinkTextControls={},textBlinkg=0,changedControls={},blinkSrcTextColors={},msgLcdDelay=2000,msgLcdSent=0,msgLcd='',fadeDelay=30,fadeLast=0,relaxDelay=2000,relaxLast=0,hurryDelay=300,hurryLast=0,slowSetDelay=20,slowSetLast=0}function init()initDebug()log('INIT processor..')initShiva()log('Max preset: '..G.maxPreset)registerHandlers()applyLayout()initConfig()clearWork()initPreset()disableFade()initCrossfade()getAllCurrentValues(true)initGui()end;function initDebug()if E.stBtnEnableDebug.values.x==0 then o=false else o=true end;logDebug('#### Debug logging ENABLED. ####')end;function initShiva()local H=C.parent.parent.children[globalPresetStoreName]if H~=nil then local s=H.parent.name..'.'..H.name;log('FOUND GLOBAL PRESET STORE TABLE: '..s)E.presetStore=H.children else E.presetStore=D.shivaPresetStore.children;log('Using default internal preset store table: '..D.shivaPresetStore.name)end;G.maxPreset=#E.presetStore-1;E.allPages={E.groupDirectLoadButtonsMain,E.grpManagerMain,E.groupRunSettingsMain,E.groupKeyboardMain}end;function initConfig()log('Initializing config')initDebug()G.rootName=E.groupRunSettings.stLblPresetRoot.values.text;G.presetRootCtrl=G.rootName==''and root or root:findByName(G.rootName,true)if G.presetRootCtrl==nil then log('WARNING! Control group "'..G.rootName..'" not found! Using root!')E.groupRunSettings.stLblShowRoot.values.text='GROUP NAME ERROR! Using root!'lcdMessageDelayed('WARNING! base group error!')G.presetRootCtrl=root else E.groupRunSettings.stLblShowRoot.values.text='Group found :)'end;G.allControls=nil;G.autoFade=false;toggleFadeMode()lcdMessage('Controls Select:\n'..getSelectModeStr())end;function initGui()for i=11,20 do E.groupDirectLoadButtons[i].tag=Color.toHexString(E.groupDirectLoadButtons[i].properties.textColor)end;updateDirectLoadButtons()updateLabelFade()ignoreToggle=false;if showingEditor()then showEditor()elseif showingCollapsed()then G.collapsed=true;showCollapsed()elseif showingDirectLoad then showDirectLoad()else showEditor()end;lcdMessage('Controls Select:\n'..getSelectModeStr())lcdMessageDelayed('Welcome to\n"Shiva"\nPreset Module')log('Init finished.')log('== Welcome to "Shiva" Preset Module! Happy Jamin\' :-) ==')end;function cycleView()if E.menuContext.visible then return end;if showingKeyboard()then return end;if showingRunSettings()then initConfig()if G.lastPage~=showRunSettings then showLastPage()elseif G.collapsed then showCollapsed()else showEditor()end;return end;if showingDirectLoad()then if G.collapsed then showCollapsed()else showEditor()end elseif showingEditor()then showDirectLoad()elseif showingCollapsed()then showDirectLoad()else showEditor()end end;function initPreset()if getSelectedPreset()==nil then selectPreset(0)end;local I=getActivePreset()if I==nil then I=0 else I=math.max(0,math.min(G.maxPreset,I))end;selectPreset(I)if not applySelectedPreset()then activateSelectedPreset()end end;function onReceiveNotify(J,K)if J=='blinkFader'then blinkControls(K)elseif J=='blinkText'then blinkTextControls(K)elseif J=='kbdClose'then saveKeyboardValue(K)elseif J=='longTap'then if K==E.dspSelected.name then showContextMenu()elseif K=='lblDirectEdit'then G.ignoreToggle=true;showRunSettings()elseif string.match(K,'^direct[0-9]+$')then local L=string.sub(K,7)selectPreset(L)if loadSelectedPreset()then showContextMenu()else showContextMenu(z)end end end end;function update()local M=getMillis()updateFast(M)updateSlow(M)updateFade(M)end;function registerHandlers()F={btnFnEnter=loadOrSave,btnFnLoad=toggleLoad,btnFnSave=toggleSave,fdrCrossfade=fadeStart,fadeState=fadeUpdate,lcdMessage=lcdTap,lblFadeMode=toggleFadeMode,btnRestore=restoreWork,btnClearWork=clearWork,btnMinusBank=bankSwitch,btnPlusBank=bankSwitch,btnMinusPrg=prgSwitch,btnPlusPrg=prgSwitch,btnMinusDirectBankLoad=bankSwitchDirect,btnPlusDirectBankLoad=bankSwitchDirect,btnMinusDirectPrgLoad=prgSwitchDirect,btnPlusDirectPrgLoad=prgSwitchDirect,lblDirectHeading=toggleCollapse,lblDirectEdit=toggleEdit,dspInfo=addChangedControlsToBlink,entryCut=clipBoardCut,entryCopy=clipBoardCopy,entryPaste=clipBoardPaste,entryDelete=deletePreset,stBtnRandomize=executeRandomize,stBtnClearPreset=purgePresetStore,stBtnSelectMidi=discoverControls,stBtnSelectOsc=discoverControls,stLblPresetRoot=discoverControls}end;function onValueChanged()local J=self.values.text;self.values.text=''if string.match(J,'^direct[0-9]+')then directSelect(J)elseif string.match(J,'^[0-9]+$')then addDigitToPreset(J)else for c,N in pairs(F)do if c==J then logDebug('Command: '..c)N(J)end end end end;function discoverControls()initConfig()G.allControls=nil;getAllCurrentValues(true)E.stLblShowControlCount.values.text='found controls: '..#G.allControls;addControlToTextBlink(E.stLblShowControlCount)for O,c in pairs(G.allControls)do addControlToBlink(c)end;G.blinking=q end;function blinkControls(K)if G.blinking<=0 then return end;for P,v in pairs(G.blinkControls)do v.ctrl.properties.color.a=K;if v.ctrl.properties.textColor~=nil then v.ctrl.properties.textColor.a=K end end end;function blinkTextControls(K)if K==1 then for O,v in pairs(G.blinkTextControls)do logDebug('Remove text blink: '..v.ctrl.name)v.ctrl.properties.textColor.a=v.at;G.blinkTextControls[O]=nil end else for O,v in pairs(G.blinkTextControls)do v.ctrl.properties.textColor.a=K end end end;function updateFast(M)if itIsTimeTo('hurry',M)then updateBlinking()end end;function updateSlow(M)showMsgLcdDelayed(M)if itIsTimeTo('relax',M)then if not G.fading and crossfaderNotTouched()then if not G.autoFade then E.fdrCrossfade.values.x=1.0 else E.fdrCrossfade.values.x=0.0 end end;if getActivePreset()==getSelectedPreset()then checkModified()end end end;function updateFade(M)if itIsTimeTo('fade',M)then if not G.autoFade or G.fadeStep<0 then return end;if G.fadeStep==0 then disableFade()applySelectedPreset()end;applyFadeValues()updateFadeValues()if math.fmod(G.fadeStep,10)==0 then local s=(getMillis()-M)/G.fadeDelay;E.grpManager.fdrLoad.values.x=0.5*(E.grpManager.fdrLoad.values.x+s)if s>0.9 then E.grpManager.fdrLoad.color.r=1 elseif s>0.8 then E.grpManager.fdrLoad.color.r=0.5 else E.grpManager.fdrLoad.color.r=0 end end end end;function updateBlinking()if G.blinking>0 then E.blinkFader.values.x=1;G.blinking=G.blinking-1 else for O,v in pairs(G.blinkControls)do logDebug('Resetting control after blink: '..v.ctrl.name)v.ctrl.properties.color.a=v.a;if v.ctrl.properties.textColor~=nil then v.ctrl.properties.textColor.a=v.at end;G.blinkControls[O]=nil end end end;function loadOrSave()disableFade()if userWantsToSave()then saveToSelectedPreset()E.btnFnSave.values.x=0 elseif userWantsToLoad()then cacheWork()applySelectedPreset()E.btnFnLoad.values.x=0 else lcdMessage('select function\nload or save')end end;function toggleLoad()showSelectMessage()if E.btnFnLoad.values.x==0 then lcdMessage(getSelectedPresetName())else lcdMessage('enter to load')end end;function toggleSave()showSelectMessage()if E.btnFnSave.values.x==0 then if getSelectedPreset()==getActivePreset()then lcdMessage(getActivePresetName())else lcdMessage(getSelectedPresetName())end else if G.selectedIsEmpty then lcdMessage('ENTER NAME:\ntap here')else lcdMessage('enter to save')end end end;function fadeStart()if not G.autoFade then return end;if E.btnFnLoad.values.x~=1 then lcdMessage('enable load!')elseif G.fadeStep>0 then G.fadeStartTime=getMillis()E.btnFnLoad.values.x=0;initCrossfade()startFading()applySelectedPreset()end end;function fadeUpdate()if not G.autoFade then if E.btnFnLoad.values.x~=1 and not G.fading then lcdMessage('enable load!')else E.btnFnLoad.values.x=0;initCrossfade()startFading()applyManualFade(E.fdrCrossfade.values.x)end elseif G.autoFade then if crossfaderNotTouched()then if not userWantsToLoad()then return end;if E.fdrCrossfade.values.x==0 then lcdMessage(getSelectedPresetName())return end end;local v=makeCrossfaderCurvy()if v>0 then v=math.max(5,v)lcdMessage('fade '..string.format("%.2f",1.7*v*G.fadeDelay/1000)..' s')G.fadeStep=v;G.fadeMax=v else lcdMessage('fade abort')G.fadeStep=0;G.fadeMax=100 end end end;function lcdTap()if userWantsToSave()and G.selectedIsEmpty then G.kbdTarget=B;startKeyboard(self.ID,getSelectedPresetName())elseif userWantsToLoad()then lcdMessage(getSelectedPresetName())elseif getActivePreset()~=getSelectedPreset()then local s=getActivePresetName()selectActivePreset()loadSelectedPreset()setActivePresetName(s)lcdMessage(getActivePresetName())addDisplaysToBlink()elseif E.lcdMessage.values.text~=getActivePresetName()then lcdMessage(getActivePresetName())else lcdMessage(getActivePreset())G.kbdTarget=A;startKeyboard(self.ID,getActivePresetName())end end;function addDisplaysToBlink()addControlToBlink(E.dspSelected)addControlToBlink(E.dspDirectInfo)addControlToBlink(E.dspInfo)G.blinking=r end;function toggleEdit()if G.ignoreToggle then G.ignoreToggle=false;return end;cycleView()updateDirectLoadButtons()end;function directSelect(J)if userReleasedDirectLoadButttons()then local I=string.sub(J,7)selectPreset(I)if directLoad()then updateDirectLoadButtons()end else updateDirectLoadButtons()end end;function directLoad()local i=tonumber(E.stBtnGrpFadeOnDirectLoad.values.text)if i==nil then i=0 end;i=math.floor(i)if i>0 then G.fadeStep=i;G.fadeMax=i;G.autoFade=true;initCrossfade()startFading()end;E.btnFnLoad.values.x=0;if not applySelectedPreset()then disableFade()return false end;return true end;function addChangedControlsToBlink()logDebug('Add changed controls to blink')for O,c in pairs(G.changedControls)do addControlToBlink(c)end;G.blinking=q end;function prgSwitch(Q)Q=Q=='btnPlusPrg'local I=getSelectedPreset()or 0;w=I;local R;if Q then I=I==G.maxPreset and 0 or I+1 else I=I==0 and G.maxPreset or I-1 end;selectPreset(I)loadSelectedPreset()end;function prgSwitchDirect(Q)Q=Q=='btnPlusDirectPrgLoad'local I=getSelectedPreset()or 0;I=I-math.fmod(I,10)if Q then I=I+10;if I>G.maxPreset then I=0 end else I=I-10;if I<0 then I=G.maxPreset-9 end end;logDebug('Switching bank: '..I)selectPreset(I)updateDirectLoadButtons(I)end;function bankSwitch(Q)Q=Q=='btnPlusBank'local I=getSelectedPreset()or 0;I=I-math.fmod(I,G.bankSize)if Q then I=I+G.bankSize;if I>G.maxPreset then I=0 end else I=I-G.bankSize;if I<0 then I=G.maxPreset-G.bankSize+1 end end;logDebug('Switching bank: '..I)selectPreset(I)end;function bankSwitchDirect(Q)Q=Q=='btnPlusDirectBankLoad'local I=getSelectedPreset()or 0;I=I-math.fmod(I,G.bankSize)if Q then I=I+G.bankSize;if I>G.maxPreset then I=0 end else I=I-G.bankSize;if I<0 then I=G.maxPreset-G.bankSize+1 end end;logDebug('Switching bank: '..I)selectPreset(I)updateDirectLoadButtons(I)end;function toggleCollapse()if G.collapsed then if not showingCollapsed()then showCollapsed()G.collapsed=true else if G.lastPage==showDirectLoad then showEditor()else showLastPage()end;G.collapsed=false end else showCollapsed()G.collapsed=true end end;function clipBoardCut()if not E.menuContext.children.entryCut.properties.interactive then return end;logDebug('clipboard cut')if G.presetModified then hideContextMenu()lcdMessage('cannot cut\npreset modified')return end;G.clipBoard=json.fromTable(G.presetValues)deletePreset()updateDirectLoadButtons()hideContextMenu()lcdMessage('cut to clipboard\npreset '..getSelectedPreset())end;function clipBoardCopy()if not E.menuContext.children.entryCopy.properties.interactive then return end;logDebug('clipboard copy')if G.presetModified then hideContextMenu()lcdMessage('cannot copy\npreset modified')return end;G.clipBoard=json.fromTable(G.presetValues)updateDirectLoadButtons()hideContextMenu()lcdMessage('copied to clipboard\npreset '..getSelectedPreset())end;function clipBoardPaste()if not E.menuContext.children.entryPaste.properties.interactive then return end;logDebug('clipboard paste')if G.clipBoard==nil then hideContextMenu()lcdMessage('cannot paste\nno clipboard')return end;E.presetStore[getSelectedPreset()+1].values.text=G.clipBoard;updateDirectLoadButtons()hideContextMenu()lcdMessage('pasted to\npreset '..getSelectedPreset())end;function deletePreset()if not E.menuContext.children.entryDelete.properties.interactive then return end;logDebug('clipboard delete')E.presetStore[getSelectedPreset()+1].values.text=''updateDirectLoadButtons()hideContextMenu()lcdMessage('delete\npreset '..getSelectedPreset())end;function executeRandomize()randomizeControlsNow()end;function hideAllPages()saveLastPage()for i=1,#E.allPages do E.allPages[i].properties.visible=false end;E.lblDirectHeading.properties.visible=true;E.borderGroupBottom.properties.visible=false end;function showEditor()hideAllPages()E.borderGroupBottom.visible=true;E.grpManagerMain.visible=true end;function showDirectLoad()hideAllPages()E.lblDirectHeading.visible=false;E.borderGroupBottom.visible=true;E.groupDirectLoadButtonsMain.visible=true end;function showCollapsed()hideAllPages()end;function showRunSettings()hideAllPages()E.borderGroupBottom.visible=true;E.groupRunSettingsMain.visible=true end;function showLastPage()if G.lastPage~=nil then G.lastPage()else showEditor()end end;function saveLastPage()G.lastPage=nil;if showingCollapsed()then G.lastPage=nil elseif showingDirectLoad()then G.lastPage=showDirectLoad elseif showingEditor()then G.lastPage=showEditor elseif showingRunSettings()then G.lastPage=showRunSettings elseif showingKeyboard()then G.lastPage=showKeyboard else G.lastPage=showEditor end end;function collapsed()return G.collapsed end;function showingCollapsed()return not(showingDirectLoad()or showingEditor()or showingRunSettings()or showingKeyboard())end;function showingEditor()return E.grpManagerMain.visible end;function showingRunSettings()return E.groupRunSettingsMain.visible end;function showingDirectLoad()return E.groupDirectLoadButtonsMain.visible end;function showingKeyboard()return E.groupKeyboardMain.visible end;function showKeyboard()hideAllPages()E.borderGroupBottom.visible=true;E.groupKeyboardMain.visible=true end;function startKeyboard(S,T)showKeyboard()E.groupKeyboardMain:notify(S,T)end;function isPresetEmpty(L)return getJsonFromPresetStore(L)==false end;function saveToSelectedPreset()local I=getSelectedPreset()G.allControls=nil;getAllCurrentValues(true)if G.selectedIsEmpty then G.currValues[x][t]=getSelectedPresetName()end;logDebug('Saving to preset: '..I..' - '..getSelectedPresetName())E.presetStore[I+1].values.text=json.fromTable(G.currValues)G.presetValues=G.currValues;infoMessage('saved '..I)logDebug('Saved values: '..json.fromTable(G.currValues))setActivePreset(I)applySelectedPreset()end;function loadSelectedPreset()local I=getSelectedPreset()logDebug('Loading preset: '..I)local U=getJsonFromPresetStore(I)if not U then lcdMessage('load error\npreset empty')setSelectedPresetName('preset '..I..' [empty]')G.selectedIsEmpty=true;return false end;G.selectedIsEmpty=false;G.presetValues=json.toTable(U)ensurePresetDefaultName(I)setSelectedPresetName(G.presetValues[x][t])lcdMessage(getSelectedPresetName())showSelectMessage()return true end;function applySelectedPreset()local V=loadSelectedPreset()if not V then return false end;activateSelectedPreset()if writeToControls(G.presetValues)then showDynamicInfoForActivePreset()else infoMessage('loaded with errors!')end;return true end;function getNameFromPreset(L)local U=getJsonFromPresetStore(L)if not U then return''end;local W;if json.toTable(U)[x]~=nil then W=json.toTable(U)[x][t]end;if W==nil then return L..' [unknown]'end;return W end;function getJsonFromPresetStore(I)local V=E.presetStore[I+1].values.text;if V==nil or not string.match(V,'^{.+}$')then logDebug('Preset empty while loading: '..I)return false end;logDebug('Preset json data loaded: '..I)logDebug('Found values:')logDebug(V)return V end;function getActivePresetName()return E.lcdMessage.tag end;function setActivePresetName(s)logDebug('Setting active preset name: '..s)E.lcdMessage.tag=s end;function getActivePreset()return tonumber(E.dspInfo.tag)end;function setActivePreset(I)E.dspInfo.tag=I end;function activateSelectedPreset()E.dspInfo.tag=getSelectedPreset()setActivePresetName(getSelectedPresetName())lcdMessage(getActivePresetName())end;function getSelectedPresetName()return tostring(E.dspSelected.tag)end;function setSelectedPresetName(s)E.dspSelected.tag=s end;function getSelectedPreset()return tonumber(E.dspSelected.values.text)end;function selectActivePreset()showDynamicInfoForActivePreset()selectPreset(getActivePreset())lcdMessage(getActivePresetName())end;function selectPreset(I)E.dspSelected.values.text=I;E.dspDirectInfo.values.text=I;showSelectMessage(I)logDebug('New selected preset: '..getSelectedPreset())end;function ensurePresetDefaultName(I)if G.presetValues[x]==nil then G.presetValues[x]={}end;if G.presetValues[x][t]==nil then G.presetValues[x][t]='preset '..I end end;function showSelectMessage(I)I=I or getSelectedPreset()if I==getActivePreset()then showDynamicInfoForActivePreset()return end;local s;if userWantsToLoad()then s='load 'elseif E.btnFnSave.values.x==1 then s='save 'else s='select 'end;infoMessage(s..I)end;function controlEligible(c)special={x}for i=1,#special do if c.ID==special[i]then return true end end;if c.ID==C.ID then return false end;if string.match(c.tag,'^noshiva.*')then return false end;if E.groupRunSettings.stBtnSelectMidi.values.x==1 and#c.messages.MIDI>0 then return true end;if E.groupRunSettings.stBtnSelectOsc.values.x==1 and#c.messages.OSC>0 then return true end;if string.match(c.tag,'^shiva.*')then return true end;return false end;function getAllControls(X,Y)Y=Y==nil and 1 or Y+1;local c=X==root.ID and root or root:findByID(X,true)if c==nil then log('ERROR finding preset root control!')return end;for i=1,#c.children do if not(c.children[i].ID==C.ID or string.match(c.children[i].tag,'^noshiva.*'))then getAllControls(c.children[i].ID,Y)end end;if controlEligible(c)then table.insert(G.allControls,c)end end;function getValueType(c)local V=0;for i=1,#c.values.keys do if c.values.keys[i]=='x'then V=V+1 elseif c.values.keys[i]=='y'then V=V+2 elseif c.values.keys[i]=='text'then V=V+4 end end;return 0 end;function getAllCurrentValues(Z)if Z==nil then Z=false end;if Z then if G.rootName==''then log('Preset base group. Using whole control surface')else log('Preset base group name: '..G.presetRootCtrl.name)log('Preset base group has tag: '..G.presetRootCtrl.tag)end;log('Searching controls..')end;local O=G.presetRootCtrl.ID;if G.allControls==nil then G.allControls={}getAllControls(O)end;G.currValues={}local _=0;local valueName=''local a0=''for P,c in pairs(G.allControls)do O=c.ID;a0=c.name;if#c.values.keys==0 then if Z then log('SKIP control '..c.parent.name..'.'..a0)end else if Z then logDebug('Add control '..c.parent.name..'.'..a0)end;_=_+1;G.currValues[O]={}for i=1,#c.values.keys do valueName=c.values.keys[i]if valueName~='touch'then G.currValues[O][valueName]=c.values[valueName]G.currValues[O][valueName..'Default']=c:getValueField(valueName,ValueField.DEFAULT)end end end end;G.currValues[x]={}G.currValues[x][t]=getActivePresetName()logDebug('Name set to: '..G.currValues[x][t])G.currValues[x][u]=getActivePreset()if Z then log('Controls found: '.._)end end;function writeToControls(a1)local a2=false;local a0=''local a3;for O,a4 in pairs(a1)do if O~=x then a3=G.presetRootCtrl:findByID(O,true)if type(a4)~='table'then log('WARNING: Old invalid literal value stored, SKIPPING control ID: '..O)a2=true elseif a3==nil then log('WARNING: Invalid control ID: '..O)a2=true elseif not controlEligible(a3)then log('WARNING: Control not eligible anymore: '..a3.parent.name..'.'..a3.name..' - '..O)a2=true else a0=a3.name;if#a3.values.keys==0 then log('Warning. Control does not have any values.')else logDebug('Apply values to control '..a3.parent.name..'.'..a0)for i=1,#a3.values.keys do valueName=a3.values.keys[i]if valueName~='touch'then a3:setValueField(valueName,ValueField.DEFAULT,a4[valueName..'Default'])a3.values[valueName]=a4[valueName]end end end end end end;if G.autoFade and G.fadeStep<1 then E.fdrCrossfade.values.x=0 end;return not a2 end;function initCrossfade()logDebug('Init value fading..')if G.autoFade then G.fadeStartValue=E.fdrCrossfade.values.x;getAllCurrentValues()G.fadeValues={}G.oldValues={}for P,a1 in pairs(G.currValues)do copyValues(a1,G.fadeValues,P)copyValues(a1,G.oldValues,P)end;if G.fadeStep>0 then G.fadeStep=G.fadeMax;updateFadeSlider()else G.fadeStep=-1 end elseif not G.fading then getAllCurrentValues()G.fadeValues={}G.oldValues={}for P,a1 in pairs(G.currValues)do copyValues(a1,G.fadeValues,P)copyValues(a1,G.oldValues,P)end;G.fadeStep=-1 end end;function updateFadeValues()local d=0;for P,v in pairs(G.presetValues)do updateSingleFadeValue(P)end;if G.autoFade then G.fadeStep=G.fadeStep-1;updateFadeSlider()end end;function updateSingleFadeValue(P)if G.fadeValues[P]==nil then log('Warning! Control to fade was nil!')return end;for W,v in pairs(G.fadeValues[P])do if G.presetValues[P][W]==nil or type(G.presetValues[P][W])=='string'then G.fadeValues[P][W]=G.presetValues[P][W]else d=(G.presetValues[P][W]-G.oldValues[P][W])/G.fadeMax;if G.autoFade then G.fadeValues[P][W]=G.fadeValues[P][W]+d else G.fadeValues[P][W]=G.oldValues[P][W]+d*(G.fadeMax-G.fadeStep)end end end end;function copyValues(a5,S,a6)if S[a6]==nil then S[a6]={}end;for W,v in pairs(a5)do S[a6][W]=a5[W]S[a6][W]=a5[W]end end;function updateFadeSlider()E.fdrCrossfade.values.x=G.fadeStartValue*G.fadeStep*1/G.fadeMax end;function applyFadeValues()if not G.fading then return end;writeToControls(G.fadeValues)infoMessage('fading '..getSelectedPreset(),false)i=G.fadeMax/10;s1=string.rep('=',math.ceil((G.fadeMax-G.fadeStep)/i))s2=string.rep(' ',G.fadeMax/i-#s1)if G.fadeStep==0 and not G.autoFade then lcdMessage('..FADING..\n'..'release!',false)else local d=''if G.autoFade then d=string.format("%.1f",(getMillis()-G.fadeStartTime)/1000)end;lcdMessage('..FADING.. '..d..'\n'..'['..s1 ..s2 ..']',false)end end;function applyManualFade(a7)G.fadeStep=math.floor(G.fadeMax*a7)if G.fadeStep==0 and crossfaderNotTouched()then disableFade()applySelectedPreset()end;applyFadeValues()updateFadeValues()end;function updateLabelFade()s=G.autoFade and'FADE IN'or'FADE M'logDebug('MODE: '..s)E.lblFadeMode.values.text=s end;function isWorkEmpty()s=E.workStore[G.lastWork+1].values.text;if s==nil or s==''then return true end;if not string.match(s,'^{.+}$')then return true end;return false end;function cacheWork()log('Saving current work in progress..')getAllCurrentValues()if not G.presetModified and getSelectedPreset()==getActivePreset()then return end;G.lastWork=math.fmod(G.lastWork+1,10)E.workStore[G.lastWork+1].values.text=json.fromTable(G.currValues)updateRestoreBtn()end;function restoreWork()if isWorkEmpty()then infoMessage('no work cache')return end;local U=E.workStore[G.lastWork+1].values.text;logDebug('Found values:'..U)G.currValues=json.toTable(U)if G.currValues[x]~=nil and G.currValues[x][u]~=nil then selectPreset(G.currValues[x][u])applySelectedPreset()end;writeToControls(G.currValues)lcdMessage(G.currValues[x][t])E.workStore[G.lastWork+1].values.text=''G.lastWork=G.lastWork<=0 and 9 or G.lastWork-1;updateRestoreBtn()infoMessage('work restore')end;function clearWork()log('Clearing working state cache..')for i=1,#E.workStore do E.workStore[i].values.text=''end;G.lastWork=0;updateRestoreBtn()infoMessage('work cleared')end;function updateRestoreBtn()local s=E.workStore[G.lastWork+1].values.text;if string.match(s,'^{.+}$')then E.lblRestore.properties.textColor=1;E.lblClearWork.properties.textColor=1;local c=0;for i=1,#E.workStore do if string.match(E.workStore[i].values.text,'^{.+}$')then c=c+1 end end else E.lblRestore.properties.textColor=0.3;E.lblClearWork.properties.textColor=0.3 end end;function purgePresetStore()log('Clear all presets enabled! CLEARING ALL PRESETS NOW!')for i=1,#E.presetStore do E.presetStore[i].values.text=''end end;function randomizeControlsNow()logDebug('Randomizing all control values!')getAllCurrentValues()for P,c in pairs(G.allControls)do logDebug('Randomizing '..c.name)if c.type==ControlType.BUTTON then c.values.x=math.random(0,1)else if c.values.x~=nil then c.values.x=math.random()end;if c.values.y~=nil then c.values.y=math.random()end end end end;function applySkinGeneric()types={'BUTTON','LABEL','TEXT'}local a8;local c;for i=1,#types do a8=self.parent:findAllByType(ControlType[types[i]],true)logDebug('Applying buttons')for a9,a3 in pairs(a8)do if string.match(a3.name,'^btn.+')then logDebug('btn: '..a3.name)a3.properties.color=E.skinSettings.templateButton.properties.color;a3.properties.background=E.skinSettings.templateButton.properties.background;a3.properties.outline=E.skinSettings.templateButton.properties.outline;a3.properties.outlineStyle=E.skinSettings.templateButton.properties.outlineStyle;a3.properties.cornerRadius=E.skinSettings.templateButton.properties.cornerRadius;a3.properties.textSize=E.skinSettings.templateButton.properties.textSize;a3.properties.font=E.skinSettings.templateButton.properties.font end;if string.match(a3.name,'^btnMinus.+')or string.match(a3.name,'^btnPlus.+')then logDebug('btn: '..a3.name)a3.properties.textSize=E.skinSettings.templateButton.properties.textSize-3 end;if string.match(a3.name,'^btnFn.+')then logDebug('btn: '..a3.name)if a3.parent.name=="groupKeyboard"and a3.type==ControlType.LABEL then a3.properties.background=false else a3.properties.background=E.skinSettings.templateFunctions.properties.background end;a3.properties.color=E.skinSettings.templateFunctions.properties.color;a3.properties.outline=E.skinSettings.templateFunctions.properties.outline;a3.properties.outlineStyle=E.skinSettings.templateFunctions.properties.outlineStyle;a3.properties.cornerRadius=E.skinSettings.templateFunctions.properties.cornerRadius;a3.properties.textSize=E.skinSettings.templateFunctions.properties.textSize;a3.properties.font=E.skinSettings.templateFunctions.properties.font end;if string.match(a3.name,'^btnDirect.+')then logDebug('btnDirect: '..a3.name)a3.properties.color=E.skinSettings.templateButtonDirect.properties.color;a3.properties.background=E.skinSettings.templateButtonDirect.properties.background;a3.properties.outline=E.skinSettings.templateButtonDirect.properties.outline;a3.properties.outlineStyle=E.skinSettings.templateButtonDirect.properties.outlineStyle;a3.properties.cornerRadius=E.skinSettings.templateButtonDirect.properties.cornerRadius;a3.properties.textSize=E.skinSettings.templateButtonDirect.properties.textSize;a3.properties.font=E.skinSettings.templateButtonDirect.properties.font end;if string.match(a3.name,'^btnMinusDirect.+')or string.match(a3.name,'^btnPlusDirect.+')then logDebug('btn: '..a3.name)a3.properties.textSize=E.skinSettings.templateButtonDirect.properties.textSize-3 end end;logDebug('Applying labels..')for a9,a3 in pairs(a8)do if string.match(a3.name,'^lbl.+')then logDebug('lbl: '..a3.name)a3.properties.color=E.skinSettings.templateLabel.properties.color;a3.properties.textColor=E.skinSettings.templateLabel.properties.textColor;a3.properties.background=E.skinSettings.templateLabel.properties.background;a3.properties.outline=E.skinSettings.templateLabel.properties.outline;a3.properties.outlineStyle=E.skinSettings.templateLabel.properties.outlineStyle;a3.properties.cornerRadius=E.skinSettings.templateLabel.properties.cornerRadius;a3.properties.textSize=E.skinSettings.templateLabel.properties.textSize;a3.properties.font=E.skinSettings.templateLabel.properties.font end;logDebug('Applying displays..')if string.match(a3.name,'^dsp.+')then logDebug('dsp: '..a3.name)a3.properties.color=E.skinSettings.templateDisplay.properties.color;a3.properties.textColor=E.skinSettings.templateDisplay.properties.textColor;a3.properties.background=E.skinSettings.templateDisplay.properties.background;a3.properties.outline=E.skinSettings.templateDisplay.properties.outline;a3.properties.outlineStyle=E.skinSettings.templateDisplay.properties.outlineStyle;a3.properties.cornerRadius=E.skinSettings.templateDisplay.properties.cornerRadius;a3.properties.textSize=E.skinSettings.templateDisplay.properties.textSize;a3.properties.font=E.skinSettings.templateDisplay.properties.font end;logDebug('Applying digits..')if string.match(a3.name,'^[0-9]+$')then logDebug('Digits: '..a3.name)a3.properties.color=E.skinSettings.templateDigits.properties.color;a3.properties.textColor=E.skinSettings.templateDigits.properties.textColor;a3.properties.background=E.skinSettings.templateDigits.properties.background;a3.properties.outline=E.skinSettings.templateDigits.properties.outline;a3.properties.outlineStyle=E.skinSettings.templateDigits.properties.outlineStyle;a3.properties.cornerRadius=E.skinSettings.templateDigits.properties.cornerRadius;a3.properties.textSize=E.skinSettings.templateDigits.properties.textSize;a3.properties.font=E.skinSettings.templateDigits.properties.font end;if string.match(a3.name,'^button[0-9]+$')then logDebug('Digits: '..a3.name)a3.properties.color=E.skinSettings.templateDigits.properties.color;a3.properties.textColor=E.skinSettings.templateDigits.properties.textColor;a3.properties.background=false;a3.properties.outline=E.skinSettings.templateDigits.properties.outline;a3.properties.outlineStyle=E.skinSettings.templateDigits.properties.outlineStyle;a3.properties.cornerRadius=E.skinSettings.templateDigits.properties.cornerRadius;a3.properties.textSize=E.skinSettings.templateDigits.properties.textSize;a3.properties.font=E.skinSettings.templateDigits.properties.font end;if string.match(a3.name,'^[0-9]+filler$')then logDebug('Digits: '..a3.name)c=Color(E.skinSettings.templateDigits.properties.color.r,E.skinSettings.templateDigits.properties.color.g,E.skinSettings.templateDigits.properties.color.b,E.skinSettings.templateDigits.properties.color.a/2.0)a3.properties.color=c;a3.properties.textColor=E.skinSettings.templateDigits.properties.textColor;a3.properties.background=E.skinSettings.templateDigits.properties.background;a3.properties.outline=E.skinSettings.templateDigits.properties.outline;a3.properties.outlineStyle=E.skinSettings.templateDigits.properties.outlineStyle;a3.properties.cornerRadius=E.skinSettings.templateDigits.properties.cornerRadius;a3.properties.textSize=E.skinSettings.templateDigits.properties.textSize;a3.properties.font=E.skinSettings.templateDigits.properties.font end end;logDebug('Applying text displays..')for a9,a3 in pairs(a8)do if string.match(a3.name,'^lcd.+')then logDebug('lcd: '..a3.name)a3.properties.color=E.skinSettings.templateLCD.properties.color;a3.properties.textColor=E.skinSettings.templateLCD.properties.textColor;a3.properties.background=E.skinSettings.templateLCD.properties.background;a3.properties.outline=E.skinSettings.templateLCD.properties.outline;a3.properties.outlineStyle=E.skinSettings.templateLCD.properties.outlineStyle;a3.properties.cornerRadius=E.skinSettings.templateLCD.properties.cornerRadius;a3.properties.textSize=E.skinSettings.templateLCD.properties.textSize;a3.properties.font=E.skinSettings.templateLCD.properties.font end end end end;function applySkinSingle(c,aa)logDebug('Applying special: '..c.name)c.properties.color=aa.properties.color;if c.properties.textColor~=nil then c.properties.textColor=aa.properties.textColor end;c.properties.background=aa.properties.background;c.properties.outline=aa.properties.outline;c.properties.outlineStyle=aa.properties.outlineStyle;c.properties.cornerRadius=aa.properties.cornerRadius;c.properties.textSize=aa.properties.textSize end;function applyLayout()if E.skinSettings.applyLayout.values.x==0 then return end;log('Applying layout..')applySkinGeneric()applySkinSingle(E.lblDirectHeading,E.skinSettings.templateHeading)E.lcdMessage.properties.textColor=h end;function userWantsToLoad()return E.btnFnLoad.values.x==1 end;function crossfaderNotTouched()return not E.fdrCrossfade.values.touch end;function userWantsToSave()return E.btnFnSave.values.x==1 end;function userReleasedDirectLoadButttons()return not E.groupDirectLoadButtonsMain.values.touch end;function log(s)print(s)end;function logDebug(s)if o==true then print(s)end end;function infoMessage(s,ab)logDebug('message: '..s)if ab~=false then addControlToTextBlink(E.dspInfo)addControlToTextBlink(E.dspDirectInfo)end;E.dspInfo.values.text=s end;function lcdMessage(s,ab)logDebug('LCD msg: '..s)if ab~=false then addControlToTextBlink(E.lcdMessage)end;E.lcdMessage.values.text=s end;function lcdMessageDelayed(s,ab)G.msgLcdSent=getMillis()G.msgLcd=s end;function showMsgLcdDelayed(M)if G.msgLcdSent>0 and M-G.msgLcdSent>G.msgLcdDelay then lcdMessage(G.msgLcd)G.msgLcd=''G.msgLcdSent=0 end end;function makeCrossfaderCurvy()return math.floor(E.fdrCrossfade.values.x^2*750)end;function itIsTimeTo(ac,M)if M-G[ac..'Last']>G[ac..'Delay']then if not G.fading and ac=='fade'then return false end;G[ac..'Last']=M;return true end;return false end;function showContextMenu(ad)ad=ad==nil and y or ad;local s='= Preset '..getSelectedPreset()..' ='if not G.presetModified then s='= Preset '..getSelectedPreset()..' ='else s='= *Preset '..getSelectedPreset()..'* ='ad=z end;if ad==z then E.menuContext.children.entryCut.properties.interactive=false;E.menuContext.children.entryCut.properties.textColor=0.1;E.menuContext.children.entryCopy.properties.interactive=false;E.menuContext.children.entryCopy.properties.textColor=0.1;E.menuContext.children.entryPaste.properties.interactive=true;E.menuContext.children.entryPaste.properties.textColor=b;E.menuContext.children.entryDelete.properties.interactive=false;E.menuContext.children.entryDelete.properties.textColor=0.1 else E.menuContext.children.entryCut.properties.interactive=true;E.menuContext.children.entryCut.properties.textColor=b;E.menuContext.children.entryCopy.properties.interactive=true;E.menuContext.children.entryCopy.properties.textColor=b;E.menuContext.children.entryPaste.properties.interactive=true;E.menuContext.children.entryPaste.properties.textColor=b;E.menuContext.children.entryDelete.properties.interactive=true;E.menuContext.children.entryDelete.properties.textColor=b end;E.grpBlock.visible=true;E.menuContext.children[1].values.text='= Preset '..getSelectedPreset()..' ='E.menuContext.properties.visible=true end;function hideContextMenu()E.menuContext.properties.visible=false;E.grpBlock.visible=false end;function checkModified()if G.fading or getSelectedPreset()~=getActivePreset()then return end;local m=false;getAllCurrentValues(false)for O,v in pairs(G.presetValues)do if O~=x then c=G.presetRootCtrl:findByID(O,true)if valuesChanged(G.currValues[O],G.presetValues[O])then logDebug('Value changed: '..O)m=true;if c~=nil and G.changedControls[O]==nil then logDebug('Add to changed controls: '..c.name)G.changedControls[O]=c end else if c~=nil and G.changedControls[O]~=nil then logDebug('Remove from changed controls: '..c.name)G.changedControls[O]=nil end end end end;G.presetModified=m;G.modifiedText=m and'*'or''if E.btnFnLoad.values.x==0 and E.btnFnSave.values.x==0 then showDynamicInfoForActivePreset()end end;function valuesChanged(ae,af)if type(af)~='table'or type(ae)~='table'then return af==ae end;for P,v in pairs(ae)do if ae[P]~=af[P]then return true end end;return false end;function saveKeyboardValue(T)if G.kbdTarget==B then showEditor()setSelectedPresetName(T)lcdMessage(getSelectedPresetName())elseif G.kbdTarget==A then showEditor()setActivePresetName(T)lcdMessage(getActivePresetName())end end;function showDynamicInfoForActivePreset()infoMessage(G.modifiedText..p..getActivePreset()..G.modifiedText,false)end;function toggleFadeMode()G.autoFade=not G.autoFade;updateLabelFade()if not G.autoFade then initCrossfade()E.fdrCrossfade:setValueField('x',ValueField.CURRENT,1.0)E.fdrCrossfade:setValueField('x',ValueField.DEFAULT,1.0)lcdMessage('select mode\nmanual fade')else E.fdrCrossfade:setValueField('x',ValueField.CURRENT,0.0)E.fdrCrossfade:setValueField('x',ValueField.DEFAULT,0.0)lcdMessage('select mode\nauto fade')end end;function startFading()G.fading=true;for i=1,#E.grpManager do if E.grpManager[i].tag~='ignore'then E.grpManager[i].properties.interactive=false end end end;function disableFade()logDebug('Disable fader..')E.fdrCrossfade.values.x=not G.autoFade and 1.0 or 0.0;G.fading=false;G.fadeStep=0;for i=1,#E.grpManager do if E.grpManager[i].tag~='ignore'then E.grpManager[i].properties.interactive=true end end end;function addDigitToPreset(s)logDebug('Received new digit: '..s)v=getSelectedPreset()if v==nil or v==0 then v=s else v=getSelectedPreset()..s end;if tonumber(v)>G.maxPreset then v=s end;selectPreset(v)loadSelectedPreset()end;function addControlToBlink(c)local O=c.ID;if G.blinkControls[O]==nil and G.blinkTextControls[O]==nil then logDebug('Adding: '..c.name)local ag;if c.properties.textColor~=nil then ag=c.properties.textColor.a else ag=nil end;G.blinkControls[O]={ctrl=c,a=c.properties.color.a,at=ag}else logDebug('Already blinking: '..c.name)end end;function addControlToTextBlink(c)local O=c.ID;if G.blinking>0 then return end;if G.blinkTextControls[O]==nil then logDebug('Adding text: '..c.name)G.blinkTextControls[O]={ctrl=c,at=c.properties.textColor.a}if E.blinkText.values.x==1 then E.blinkText.values.x=0 end else logDebug('Already blinking text: '..c.name)end end;function updateDirectLoadButtons(L)if L==nil then L=getSelectedPreset()end;local s=getActivePreset()m=math.fmod(L,10)L=L-m;for i=1,10 do E.groupDirectLoadButtons[i+10].values.text=getNameFromPreset(L+i-1)addControlToTextBlink(E.groupDirectLoadButtons[i+10])E.groupDirectLoadButtons[i].tag='direct'..L+i-1;E.groupDirectLoadButtons[i].values.x=L+i-1==s and 1 or 0 end end;function getSelectModeStr()local aa={}if E.groupRunSettings.stBtnSelectMidi.values.x==1 then table.insert(aa,'MIDI')end;if E.groupRunSettings.stBtnSelectOsc.values.x==1 then table.insert(aa,'OSC')end;if#aa==0 then table.insert(aa,'"shiva"')end;return table.concat(aa,' + ')end--[[END osc_lua_processor.lua]]